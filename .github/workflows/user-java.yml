# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

# name: Java CI with Maven

# on:
#   push:
#     branches: [ main ]
#       - 'apis/poi/**'
#   pull_request:
#     branches: [ main ]
#       - 'apis/poi/**'

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up JDK 1.8
#       uses: actions/setup-java@v1
#       with:
#         java-version: 1.8
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml



name: user-java integration

on:
  push:
    branches: [ main ]
    paths:
      - 'apis/user-java/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'apis/user-java/**'

jobs:
  java-user_build_test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
#     - name: Install dependencies
#       run: dotnet restore './apis/poi/poi.sln'
      
    - name: Build with Maven
      run: mvn -B package --file './apis/user-java/pom.xml'
      
    - name: Test
      run: mvn test
     
#     - uses: actions/github-script@0.9.0
#       if: failure()
#       with:
#         github-token: ${{secrets.GITHUB_TOKEN}}
#         script: |
#           let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
#           github.issues.create({
#             owner: context.repo.owner,
#             repo: context.repo.repo,
#             title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
#             body: body
#           });

#   poi_image_build_push:
    
#     needs: poi_build_test 
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: ACR build
#         id: acr
#         uses: ams0/acr-task-github-action@v1
#         with:
#           service_principal: ${{ secrets.ACRSPTEAM4_APPID }}
#           service_principal_password: ${{ secrets.ACRSPTEAM4 }}
#           tenant: ${{ secrets.TENANT }}
#           registry: ${{ secrets.REGISTRY }}
#           repository: ${{ secrets.POI_REPOSITORY_NAME }}
#           image: ${{ secrets.POI_IMAGE_NAME }}
#           tag: ${{ github.run_number }}
#           git_access_token: ${{ secrets.git_access_token }}
#           folder: apis/poi/web
#           dockerfile: ./Dockerfile

#       - name: Deploy to Azure Web App
#         uses: azure/webapps-deploy@v2
#         with:
#           app-name: 'openhackfda94sn6poi'
#           slot-name: 'production'
#           publish-profile: ${{ secrets.POI_PUBLISH_PROFILE }}
#           images: 'openhackfda94sn6acr.azurecr.io/devopsoh/api-poi:${{ github.run_number }}'
