name: Trips Integration

on:
  push:
    branches: [ main ]
    paths:
      - 'apis/trips/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'apis/trips/**'

jobs:
  trips_build_test:

    runs-on: ubuntu-latest

    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - uses: actions/checkout@v2
      
    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
  
    - name: Build
      run: go build -v .

    - name: Test
      run: go test -v .
    
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
          
  trips_image_build_push:
    
    needs: trips_build_test 
    runs-on: ubuntu-latest
    
    steps:
      - name: ACR build
        id: acr
        uses: ams0/acr-task-github-action@v1
        with:
          service_principal: ${{ secrets.ACRSPTEAM4_APPID }}
          service_principal_password: ${{ secrets.ACRSPTEAM4 }}
          tenant: ${{ secrets.TENANT }}
          registry: ${{ secrets.REGISTRY }}
          repository: ${{ secrets.TRIPS_REPOSITORY_NAME }}
          image: ${{ secrets.TRIPS_IMAGE_NAME }}
          tag: ${{ github.run_number }}
          git_access_token: ${{ secrets.git_access_token }}
          folder: apis/trips
          dockerfile: ./Dockerfile

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'openhackfda94sn6trips'
          slot-name: 'production'
          publish-profile: ${{ secrets.TRIPS_PUBLISH_PROFILE }}
          images: 'openhackfda94sn6acr.azurecr.io/devopsoh/api-trips:${{ github.run_number }}'
